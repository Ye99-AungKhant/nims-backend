generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
    id                   Int               @id @default(autoincrement())          
    name                 String
    role_id              Int?
    phone                String?
    email                String?     
    password             String?  
    username             String?           @unique
    canLogin             Boolean           @default(false)
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    role                 Role?         @relation(fields: [role_id], references: [id])
    installation_engineer InstallationEngineer[]
}

model Client{
    id                   Int               @id @default(autoincrement())
    name                 String
    address              String
    city                 String?
    state                String?
    country              String?
    postal               String?            
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    contact_person       ContactPerson[]
    vehicle              Vehicle[]
}

model ContactPerson{
    id                   Int               @id @default(autoincrement())
    client_id            Int
    name                 String
    role_id              Int?
    phone                String
    email                String           
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    client               Client       @relation(fields: [client_id], references: [id])
    role                 Role?         @relation(fields: [role_id], references: [id])
}

model Vehicle{
    id                   Int               @id @default(autoincrement())
    client_id            Int
    plate_number         String
    type_id              Int
    brand_id             Int
    model_id             Int
    year                 Int
    odometer             String?
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    client               Client       @relation(fields: [client_id], references: [id])
    device               GPSDevice[]
    type                 Type   @relation(fields: [type_id], references: [id])
    brand                Brand  @relation(fields: [brand_id], references: [id])
}

model Type{
    id                   Int               @id @default(autoincrement())
    name                 String
    type_group           TypeGroup
    createdAt            DateTime          @default(now())
    brand                Brand[]
    vehicle              Vehicle[]
    accessory            Accessory[]
    server               Server[]
    peripheral           Peripheral[]
}

model Brand{
    id                   Int               @id @default(autoincrement())
    type_id              Int?
    name                 String
    type_group           TypeGroup
    createdAt            DateTime          @default(now())
    vehicle              Vehicle[]
    type                 Type?   @relation(fields: [type_id], references: [id], onDelete: Cascade)
    model                Model[]
    gps_device           GPSDevice[]
    peripheralDetail     PeripheralDetail[]
    domain               Server[]
}

model Model{
    id                   Int               @id @default(autoincrement())
    brand_id             Int
    name                 String
    type_group           TypeGroup
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    brand                Brand  @relation(fields: [brand_id], references: [id], onDelete: Cascade)
    peripheralDetail     PeripheralDetail[]
}

model GPSDevice{
    id                   Int               @id @default(autoincrement())
    vehicle_id           Int
    brand_id             Int
    model_id             Int
    imei                 String         @unique
    serial_no            String
    warranty_plan_id     Int
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    vehicle              Vehicle       @relation(fields: [vehicle_id], references: [id])
    simcard              SimCard[]
    peripheral           Peripheral[]
    accessory            Accessory[]
    server               Server[]
    brand                Brand  @relation(fields: [brand_id], references: [id])
    warranty_plan        WarrantyPlan  @relation(fields: [warranty_plan_id], references: [id])
}

model SimCard{
    id                   Int               @id @default(autoincrement())
    device_id            Int
    phone_no             String
    operator             String
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    device               GPSDevice       @relation(fields: [device_id], references: [id])
}

model Peripheral{
    id                   Int               @id @default(autoincrement())
    device_id            Int
    sensor_type_id       Int
    qty                  Int         
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    device               GPSDevice         @relation(fields: [device_id], references: [id])
    type                 Type              @relation(fields: [sensor_type_id], references: [id])
    peripheralDetail     PeripheralDetail[]
}

model PeripheralDetail{
    id                   Int               @id @default(autoincrement())
    peripheral_id        Int
    brand_id             Int
    model_id             Int
    warranty_plan_id     Int
    serial_no            String
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    peripheral           Peripheral        @relation(fields: [peripheral_id], references: [id],onDelete: Cascade)
    warranty_plan        WarrantyPlan      @relation(fields: [warranty_plan_id], references: [id])
    brand                Brand             @relation(fields: [brand_id], references: [id])
    model                Model             @relation(fields: [model_id], references: [id])
}

model Accessory{
    id                   Int               @id @default(autoincrement())
    device_id            Int
    type_id              Int
    qty                  Int
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    device               GPSDevice       @relation(fields: [device_id], references: [id])
    type                 Type   @relation(fields: [type_id], references: [id])
}

model Server{
    id                   Int               @id @default(autoincrement())
    type_id              Int
    domain_id            Int
    installed_date       DateTime
    subscription_plan_id Int
    expire_date          DateTime
    invoice_no           String?
    object_base_fee      Int 
    gps_device_id        Int
    status               StatusGroup       @default(Active)
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    device               GPSDevice       @relation(fields: [gps_device_id], references: [id])
    type                 Type   @relation(fields: [type_id], references: [id])
    installation_engineer InstallationEngineer[]
    warranty_plan        WarrantyPlan  @relation(fields: [subscription_plan_id], references: [id])
    domain               Brand         @relation(fields: [domain_id], references: [id])
}

model InstallationEngineer{
    id                   Int               @id @default(autoincrement())
    user_id              Int
    server_id            Int
    createdAt            DateTime          @default(now())
    server               Server       @relation(fields: [server_id], references: [id])
    user                 User         @relation(fields: [user_id], references: [id])
}

model WarrantyPlan{
    id                   Int               @id @default(autoincrement())
    name                 String
    createdAt            DateTime          @default(now())
    server               Server[]
    peripheralDetail     PeripheralDetail[]
    gps_device           GPSDevice[]
}

model Role{
    id                   Int               @id @default(autoincrement())
    name                 String            @unique
    canLogin             Boolean           @default(false)
    createdAt            DateTime          @default(now())
    updatedAt            DateTime          @updatedAt
    contact_person       ContactPerson[]
    user                 User[]
     permissions Permission[]
}

model Permission {
  id      Int     @id @default(autoincrement())
  page_name    String  
  view    Boolean      @default(false)
  create  Boolean      @default(false)
  update  Boolean      @default(false)  
  delete  Boolean      @default(false)
  roleId    Int
  role      Role    @relation(fields: [roleId], references: [id])
}

enum TypeGroup {
  Vehicle
  GPS
  Sensor
  Accessory
  Server
  Operator
}

enum StatusGroup{
    Active
    ExpireSoon
    Renew
    Expired
    Inactive
}